{"ast":null,"code":"import axios from \"axios\";\nimport config from \"../Utils/Config\";\nclass TimeService {\n  async getTimeInGermany() {\n    const response = await axios.get(config.timeInGermanyUrl);\n    const timeInGermany = response.data;\n    return timeInGermany;\n  }\n  async getUserAttendance(month) {}\n  daysInMonth(month) {\n    return new Date(2024, month + 1, 0).getDate();\n  }\n}\nconst timeService = new TimeService();\nexport default timeService;","map":{"version":3,"names":["axios","config","TimeService","getTimeInGermany","response","get","timeInGermanyUrl","timeInGermany","data","getUserAttendance","month","daysInMonth","Date","getDate","timeService"],"sources":["/Users/doritkiron/Downloads/Vacations Project - Dor Kiron/Frontend/src/Services/TimeService.ts"],"sourcesContent":["import axios from \"axios\";\nimport config from \"../Utils/Config\";\nimport AttendanceModel from \"../Models/attendance-model\";\n\nclass TimeService {\n\n    public async getTimeInGermany(): Promise<string> {\n        const response = await axios.get<string>(config.timeInGermanyUrl);\n        const timeInGermany = response.data;\n        return timeInGermany;\n    }\n\n    public async getUserAttendance(month: str): Promise<AttendanceModel[]>{\n\n    }\n\n    public daysInMonth(month: number): number {\n        return new Date(2024, month + 1, 0).getDate();\n    };\n\n}\nconst timeService = new TimeService();\nexport default timeService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,iBAAiB;AAGpC,MAAMC,WAAW,CAAC;EAEd,MAAaC,gBAAgBA,CAAA,EAAoB;IAC7C,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAASJ,MAAM,CAACK,gBAAgB,CAAC;IACjE,MAAMC,aAAa,GAAGH,QAAQ,CAACI,IAAI;IACnC,OAAOD,aAAa;EACxB;EAEA,MAAaE,iBAAiBA,CAACC,KAAU,EAA6B,CAEtE;EAEOC,WAAWA,CAACD,KAAa,EAAU;IACtC,OAAO,IAAIE,IAAI,CAAC,IAAI,EAAEF,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC;EACjD;AAEJ;AACA,MAAMC,WAAW,GAAG,IAAIZ,WAAW,CAAC,CAAC;AACrC,eAAeY,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}