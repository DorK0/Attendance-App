{"ast":null,"code":"var _jsxFileName = \"/Users/doritkiron/Downloads/Vacations Project - Dor Kiron/Frontend/src/Components/AuthArea/Login/Login.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthService from \"../../../Services/AuthService\";\nimport notifyService from \"../../../Services/NotifyService\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  var _errors$username, _errors$password;\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  async function send(credentials) {\n    try {\n      await AuthService.login(credentials);\n      notifyService.success(\"Welcome \" + credentials.username + \" ü´∂üèΩ\");\n      navigate(\"/clock\");\n    } catch (err) {\n      notifyService.error(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login Box\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(send),\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Your Username\",\n          ...register(\"username\", {\n            required: {\n              value: true,\n              message: \"Missing username\"\n            },\n            minLength: {\n              value: 5,\n              message: \"Username too short\"\n            },\n            maxLength: {\n              value: 50,\n              message: \"Username too long\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"100% cool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          ...register(\"password\", {\n            required: {\n              value: true,\n              message: \"Missing password\"\n            },\n            minLength: {\n              value: 5,\n              message: \"Password should be at least 8 characters\"\n            },\n            maxLength: {\n              value: 50,\n              message: \"Password should be less then 50 characters\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"Your password is safe with us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"/YuKlbi5VeGYmL8Q8s+8xNji9ko=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Button","Form","useForm","useNavigate","AuthService","notifyService","jsxDEV","_jsxDEV","Login","_s","_errors$username","_errors$password","navigate","register","handleSubmit","formState","errors","send","credentials","login","success","username","err","error","className","children","onSubmit","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","required","value","message","minLength","maxLength","Text","password","variant","_c","$RefreshReg$"],"sources":["/Users/doritkiron/Downloads/Vacations Project - Dor Kiron/Frontend/src/Components/AuthArea/Login/Login.tsx"],"sourcesContent":["import { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport CredentialsModel from \"../../../Models/CredentialsModel\";\nimport AuthService from \"../../../Services/AuthService\";\nimport notifyService from \"../../../Services/NotifyService\";\nimport \"./Login.css\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Login(): JSX.Element {\n    const navigate = useNavigate();\n    const { register, handleSubmit, formState: { errors } } = useForm<CredentialsModel>();\n\n\n    async function send(credentials: CredentialsModel) {\n        try {\n            await AuthService.login(credentials);\n            notifyService.success(\"Welcome \" + credentials.username + \" ü´∂üèΩ\");\n            navigate(\"/clock\");\n        }\n        catch (err: any) {\n            notifyService.error(err);\n        }\n    }\n\n    return (\n        <div className=\"Login Box\">\n\n            <Form onSubmit={handleSubmit(send)}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Your Username\" {...register(\"username\", {\n                        required: { value: true, message: \"Missing username\" },\n                        minLength: { value: 5, message: \"Username too short\" },\n                        maxLength: { value: 50, message: \"Username too long\" }\n                    })} />\n                    <Form.Text className=\"text-muted\">\n                        100% cool\n                    </Form.Text>\n                </Form.Group>\n                <span>{errors.username?.message}</span>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" {...register(\"password\", {\n                        required: { value: true, message: \"Missing password\" },\n                        minLength: { value: 5, message: \"Password should be at least 8 characters\" },\n                        maxLength: { value: 50, message: \"Password should be less then 50 characters\" }\n                    })} />\n                    <Form.Text className=\"text-muted\">\n                        Your password is safe with us\n                    </Form.Text>\n                </Form.Group>\n                <span>{errors.password?.message}</span>\n                <Button variant=\"primary\" type=\"submit\">\n                    Login\n                </Button>\n                <br/>\n            </Form>\n\n        </div>\n    );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}