{"ast":null,"code":"import axios from \"axios\";\nimport config from \"../Utils/Config\";\nimport store from \"../Redux/Store\";\nclass TimeService {\n  async getTimeInGermany() {\n    console.log(\"what am i doing here?\");\n    const response = await axios.get(config.timeInGermanyUrl);\n    const timeInGermany = response.data;\n    return timeInGermany;\n  }\n  async getUserAttendance(month) {\n    const response = await axios.get(config.userAttendanceUrl + month);\n    const userAttendance = response.data;\n    return userAttendance;\n  }\n  async attendance(attendance) {\n    const response = await axios.post(config.addAttendanceUrl, attendance);\n    const addedAttendance = response.data;\n    store.dispatch(attendance.action === \"In\" ? true : false);\n    return addedAttendance;\n  }\n  daysInMonth(month) {\n    return new Date(2024, month + 1, 0).getDate();\n  }\n}\nconst timeService = new TimeService();\nexport default timeService;","map":{"version":3,"names":["axios","config","store","TimeService","getTimeInGermany","console","log","response","get","timeInGermanyUrl","timeInGermany","data","getUserAttendance","month","userAttendanceUrl","userAttendance","attendance","post","addAttendanceUrl","addedAttendance","dispatch","action","daysInMonth","Date","getDate","timeService"],"sources":["/Users/doritkiron/Downloads/Vacations Project - Dor Kiron/Frontend/src/Services/TimeService.ts"],"sourcesContent":["import axios from \"axios\";\nimport config from \"../Utils/Config\";\nimport AttendanceModel from \"../Models/AttendanceModel\";\nimport store from \"../Redux/Store\";\nimport { TimeActionType } from \"../Redux/TimeState\";\n\nclass TimeService {\n\n    public async getTimeInGermany(): Promise<string> {\n        console.log(\"what am i doing here?\")\n        const response = await axios.get<string>(config.timeInGermanyUrl);\n        const timeInGermany = response.data;\n        return timeInGermany;\n    }\n\n    public async getUserAttendance(month: string): Promise<AttendanceModel[]> {\n        const response = await axios.get<AttendanceModel[]>(config.userAttendanceUrl + month);\n        const userAttendance = response.data;\n        return userAttendance;\n    }\n\n    public async attendance(attendance: AttendanceModel): Promise<AttendanceModel> {\n        const response = await axios.post<AttendanceModel>(config.addAttendanceUrl, attendance);\n        const addedAttendance = response.data;\n        store.dispatch(attendance.action === \"In\" ? true : false)\n        return addedAttendance;\n    }\n\n    public daysInMonth(month: number): number {\n        return new Date(2024, month + 1, 0).getDate();\n    };\n\n}\nconst timeService = new TimeService();\nexport default timeService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,OAAOC,KAAK,MAAM,gBAAgB;AAGlC,MAAMC,WAAW,CAAC;EAEd,MAAaC,gBAAgBA,CAAA,EAAoB;IAC7CC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAASP,MAAM,CAACQ,gBAAgB,CAAC;IACjE,MAAMC,aAAa,GAAGH,QAAQ,CAACI,IAAI;IACnC,OAAOD,aAAa;EACxB;EAEA,MAAaE,iBAAiBA,CAACC,KAAa,EAA8B;IACtE,MAAMN,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAoBP,MAAM,CAACa,iBAAiB,GAAGD,KAAK,CAAC;IACrF,MAAME,cAAc,GAAGR,QAAQ,CAACI,IAAI;IACpC,OAAOI,cAAc;EACzB;EAEA,MAAaC,UAAUA,CAACA,UAA2B,EAA4B;IAC3E,MAAMT,QAAQ,GAAG,MAAMP,KAAK,CAACiB,IAAI,CAAkBhB,MAAM,CAACiB,gBAAgB,EAAEF,UAAU,CAAC;IACvF,MAAMG,eAAe,GAAGZ,QAAQ,CAACI,IAAI;IACrCT,KAAK,CAACkB,QAAQ,CAACJ,UAAU,CAACK,MAAM,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC;IACzD,OAAOF,eAAe;EAC1B;EAEOG,WAAWA,CAACT,KAAa,EAAU;IACtC,OAAO,IAAIU,IAAI,CAAC,IAAI,EAAEV,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACW,OAAO,CAAC,CAAC;EACjD;AAEJ;AACA,MAAMC,WAAW,GAAG,IAAItB,WAAW,CAAC,CAAC;AACrC,eAAesB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}