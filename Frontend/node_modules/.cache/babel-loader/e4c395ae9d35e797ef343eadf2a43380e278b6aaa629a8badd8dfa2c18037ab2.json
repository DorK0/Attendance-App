{"ast":null,"code":"import axios from \"axios\";\nimport { loginAction, logoutAction, getAllEmployeesAction } from \"../Redux/AuthState\";\nimport store from \"../Redux/Store\";\nimport config from \"../Utils/Config\";\nclass AuthService {\n  async register(user) {\n    const response = await axios.post(config.registerUrl, user);\n  }\n  async login(credentials) {\n    const response = await axios.post(config.loginUrl, credentials);\n    const token = response.data;\n    store.dispatch(loginAction(token));\n  }\n  logout() {\n    store.dispatch(logoutAction());\n  }\n  async gelAllEmployees() {\n    let employees = store.getState().authState;\n    const response = await axios.get(config.allEmployeesUrl);\n    const users = response.data;\n    store.dispatch(getAllEmployeesAction(users));\n    return users;\n  }\n  isLoggedIn() {\n    return store.getState().authState.token !== null;\n  }\n  isAdmin() {\n    var _store$getState$authS;\n    return ((_store$getState$authS = store.getState().authState.user) === null || _store$getState$authS === void 0 ? void 0 : _store$getState$authS.role) === \"Admin\";\n  }\n}\nconst authService = new AuthService();\nexport default authService;","map":{"version":3,"names":["axios","loginAction","logoutAction","getAllEmployeesAction","store","config","AuthService","register","user","response","post","registerUrl","login","credentials","loginUrl","token","data","dispatch","logout","gelAllEmployees","employees","getState","authState","get","allEmployeesUrl","users","isLoggedIn","isAdmin","_store$getState$authS","role","authService"],"sources":["/Users/doritkiron/Downloads/Vacations Project - Dor Kiron/Frontend/src/Services/AuthService.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport CredentialsModel from \"../Models/CredentialsModel\";\r\nimport UserModel from \"../Models/UserModel\";\r\nimport { loginAction, logoutAction, getAllEmployeesAction } from \"../Redux/AuthState\";\r\nimport store from \"../Redux/Store\";\r\nimport config from \"../Utils/Config\";\r\n\r\nclass AuthService {\r\n\r\n    public async register(user: UserModel): Promise<void> {\r\n        const response = await axios.post<string>(config.registerUrl, user);\r\n    }\r\n\r\n    public async login(credentials: CredentialsModel): Promise<void> {\r\n        const response = await axios.post<string>(config.loginUrl, credentials);\r\n        const token = response.data;\r\n        store.dispatch(loginAction(token));\r\n    }\r\n\r\n    public logout(): void {\r\n        store.dispatch(logoutAction());\r\n    }\r\n\r\n    public async gelAllEmployees(): Promise<UserModel[]> {\r\n        let employees = store.getState().authState\r\n        const response = await axios.get<UserModel[]>(config.allEmployeesUrl)\r\n        const users = response.data;\r\n        store.dispatch(getAllEmployeesAction(users))\r\n        return users;\r\n    }\r\n\r\n    public isLoggedIn(): boolean {\r\n        return store.getState().authState.token !== null;\r\n    }\r\n\r\n    public isAdmin(): boolean {\r\n        return store.getState().authState.user?.role === \"Admin\";\r\n    }\r\n}\r\n\r\nconst authService = new AuthService();\r\n\r\nexport default authService;\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,WAAW,EAAEC,YAAY,EAAEC,qBAAqB,QAAQ,oBAAoB;AACrF,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,MAAMC,WAAW,CAAC;EAEd,MAAaC,QAAQA,CAACC,IAAe,EAAiB;IAClD,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAASL,MAAM,CAACM,WAAW,EAAEH,IAAI,CAAC;EACvE;EAEA,MAAaI,KAAKA,CAACC,WAA6B,EAAiB;IAC7D,MAAMJ,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAASL,MAAM,CAACS,QAAQ,EAAED,WAAW,CAAC;IACvE,MAAME,KAAK,GAAGN,QAAQ,CAACO,IAAI;IAC3BZ,KAAK,CAACa,QAAQ,CAAChB,WAAW,CAACc,KAAK,CAAC,CAAC;EACtC;EAEOG,MAAMA,CAAA,EAAS;IAClBd,KAAK,CAACa,QAAQ,CAACf,YAAY,CAAC,CAAC,CAAC;EAClC;EAEA,MAAaiB,eAAeA,CAAA,EAAyB;IACjD,IAAIC,SAAS,GAAGhB,KAAK,CAACiB,QAAQ,CAAC,CAAC,CAACC,SAAS;IAC1C,MAAMb,QAAQ,GAAG,MAAMT,KAAK,CAACuB,GAAG,CAAclB,MAAM,CAACmB,eAAe,CAAC;IACrE,MAAMC,KAAK,GAAGhB,QAAQ,CAACO,IAAI;IAC3BZ,KAAK,CAACa,QAAQ,CAACd,qBAAqB,CAACsB,KAAK,CAAC,CAAC;IAC5C,OAAOA,KAAK;EAChB;EAEOC,UAAUA,CAAA,EAAY;IACzB,OAAOtB,KAAK,CAACiB,QAAQ,CAAC,CAAC,CAACC,SAAS,CAACP,KAAK,KAAK,IAAI;EACpD;EAEOY,OAAOA,CAAA,EAAY;IAAA,IAAAC,qBAAA;IACtB,OAAO,EAAAA,qBAAA,GAAAxB,KAAK,CAACiB,QAAQ,CAAC,CAAC,CAACC,SAAS,CAACd,IAAI,cAAAoB,qBAAA,uBAA/BA,qBAAA,CAAiCC,IAAI,MAAK,OAAO;EAC5D;AACJ;AAEA,MAAMC,WAAW,GAAG,IAAIxB,WAAW,CAAC,CAAC;AAErC,eAAewB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}