{"ast":null,"code":"import axios from \"axios\";\nimport config from \"../Utils/Config\";\nimport store from \"../Redux/Store\";\nimport { isInAction } from \"../Redux/TimeState\";\nclass TimeService {\n  async getTimeInGermany() {\n    const response = await axios.get(config.timeInGermanyUrl);\n    const timeInGermany = response.data;\n    return timeInGermany;\n  }\n  async getAttendance(month) {\n    const response = await axios.get(config.attendanceUrl + month);\n    const userAttendance = response.data;\n    return userAttendance;\n  }\n  async getOneAttendance(id) {\n    const response = await axios.get(config.oneAttendance);\n    const attendance = response.data;\n    return attendance;\n  }\n  async editAttendance(attendance) {}\n  async getEmployeeAttendance(userId, month) {\n    const response = await axios.get(config.employeeAttendance + userId + \"/\" + month);\n    const employeeAttendance = response.data;\n    return employeeAttendance;\n  }\n  async attendance(attendance) {\n    const response = await axios.post(config.addAttendanceUrl, attendance);\n    const addedAttendance = response.data;\n    store.dispatch(isInAction(attendance.action === \"In\" ? true : false));\n    return addedAttendance;\n  }\n  daysInMonth(month) {\n    return new Date(2024, month + 1, 0).getDate();\n  }\n}\nconst timeService = new TimeService();\nexport default timeService;","map":{"version":3,"names":["axios","config","store","isInAction","TimeService","getTimeInGermany","response","get","timeInGermanyUrl","timeInGermany","data","getAttendance","month","attendanceUrl","userAttendance","getOneAttendance","id","oneAttendance","attendance","editAttendance","getEmployeeAttendance","userId","employeeAttendance","post","addAttendanceUrl","addedAttendance","dispatch","action","daysInMonth","Date","getDate","timeService"],"sources":["/Users/doritkiron/Downloads/Vacations Project - Dor Kiron/Frontend/src/Services/TimeService.ts"],"sourcesContent":["import axios from \"axios\";\nimport config from \"../Utils/Config\";\nimport AttendanceModel from \"../Models/AttendanceModel\";\nimport store from \"../Redux/Store\";\nimport { isInAction } from \"../Redux/TimeState\";\n\nclass TimeService {\n\n    public async getTimeInGermany(): Promise<string> {\n        const response = await axios.get<string>(config.timeInGermanyUrl);\n        const timeInGermany = response.data;\n        return timeInGermany;\n    }\n\n    public async getAttendance(month: string): Promise<AttendanceModel[]> {\n        const response = await axios.get<AttendanceModel[]>(config.attendanceUrl + month);\n        const userAttendance = response.data;\n        return userAttendance;\n    }\n\n    public async getOneAttendance(id: number): Promise<AttendanceModel> {\n        const response = await axios.get<AttendanceModel>(config.oneAttendance);\n        const attendance = response.data;\n        return attendance;\n    }\n\npublic async editAttendance(attendance: AttendanceModel): Promise<AttendanceModel>{\n    \n}\n\n    public async getEmployeeAttendance(userId: number, month: string): Promise<AttendanceModel[]> {\n        const response = await axios.get<AttendanceModel[]>(config.employeeAttendance + userId + \"/\" + month);\n        const employeeAttendance = response.data;\n        return employeeAttendance;\n    }\n\n    public async attendance(attendance: AttendanceModel): Promise<AttendanceModel> {\n        const response = await axios.post<AttendanceModel>(config.addAttendanceUrl, attendance);\n        const addedAttendance = response.data;\n        store.dispatch(isInAction(attendance.action === \"In\" ? true : false))\n        return addedAttendance;\n    }\n\n    public daysInMonth(month: number): number {\n        return new Date(2024, month + 1, 0).getDate();\n    };\n\n}\nconst timeService = new TimeService();\nexport default timeService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAASC,UAAU,QAAQ,oBAAoB;AAE/C,MAAMC,WAAW,CAAC;EAEd,MAAaC,gBAAgBA,CAAA,EAAoB;IAC7C,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAASN,MAAM,CAACO,gBAAgB,CAAC;IACjE,MAAMC,aAAa,GAAGH,QAAQ,CAACI,IAAI;IACnC,OAAOD,aAAa;EACxB;EAEA,MAAaE,aAAaA,CAACC,KAAa,EAA8B;IAClE,MAAMN,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAoBN,MAAM,CAACY,aAAa,GAAGD,KAAK,CAAC;IACjF,MAAME,cAAc,GAAGR,QAAQ,CAACI,IAAI;IACpC,OAAOI,cAAc;EACzB;EAEA,MAAaC,gBAAgBA,CAACC,EAAU,EAA4B;IAChE,MAAMV,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAkBN,MAAM,CAACgB,aAAa,CAAC;IACvE,MAAMC,UAAU,GAAGZ,QAAQ,CAACI,IAAI;IAChC,OAAOQ,UAAU;EACrB;EAEJ,MAAaC,cAAcA,CAACD,UAA2B,EAA2B,CAElF;EAEI,MAAaE,qBAAqBA,CAACC,MAAc,EAAET,KAAa,EAA8B;IAC1F,MAAMN,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAoBN,MAAM,CAACqB,kBAAkB,GAAGD,MAAM,GAAG,GAAG,GAAGT,KAAK,CAAC;IACrG,MAAMU,kBAAkB,GAAGhB,QAAQ,CAACI,IAAI;IACxC,OAAOY,kBAAkB;EAC7B;EAEA,MAAaJ,UAAUA,CAACA,UAA2B,EAA4B;IAC3E,MAAMZ,QAAQ,GAAG,MAAMN,KAAK,CAACuB,IAAI,CAAkBtB,MAAM,CAACuB,gBAAgB,EAAEN,UAAU,CAAC;IACvF,MAAMO,eAAe,GAAGnB,QAAQ,CAACI,IAAI;IACrCR,KAAK,CAACwB,QAAQ,CAACvB,UAAU,CAACe,UAAU,CAACS,MAAM,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;IACrE,OAAOF,eAAe;EAC1B;EAEOG,WAAWA,CAAChB,KAAa,EAAU;IACtC,OAAO,IAAIiB,IAAI,CAAC,IAAI,EAAEjB,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACkB,OAAO,CAAC,CAAC;EACjD;AAEJ;AACA,MAAMC,WAAW,GAAG,IAAI3B,WAAW,CAAC,CAAC;AACrC,eAAe2B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}